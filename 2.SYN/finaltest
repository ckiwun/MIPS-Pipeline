000000_00 000_00000 00000000  00000000   //nop
001000_00 000_11110 00001001  00110010   //addi $30   $0   
000011_00 000_00000 00000000  00001000   //jal   8 
000011_00 000_00000 00000000  00001010   //jal   10 
000011_00 000_00000 00000000  00010001   //jal   
001000_00 000_11110 00001101  01011101   //addi $30   $0   
000011_00 000_00000 00000000  00001000   //jal   8 
000010_00 000_00000 00000000  00111110   //j    
101011_00 000_11110 00000_001 00_000000  //sw   $30   1
000000_11 111_00000 00000000  00001000    //jr    $31
000000_00 000_00000 00001_000 00_100000  //add  $1  $0   $0
001010_00 001_00010 00000_000 01_000000  //slti $2  $1   5
000100_00 010_00000 00000000  00000011   //beq  $2  $0  3
101011_00 000_00001 00000_000 00_000000  //sw   $1   0
001000_00 001_00001 00000000  00000100   //addi $   $0  
000010_00 000_00000 00000000  00001011   //j 
000000_11 111_00000 00000000  00001000    //jr    $31
000000_11 111_00000 11101_000 00_100000  //add  $29  $31   $0
000000_00 000_00000 00001_000 00_100111  //nori
001100_00 001_00010 11111111  11111111   //andi $2   $1   -1
000000_00 001_00010 10100_000 00_100100  //and  $20  $1  $2
001101_00 000_00010 11111111  00000000   //ori  $2   $0   
001101_00 000_00011 00000000  11111111   //ori  $3   $0   
000000_00 010_00011 10101_000 00_100101  //or   $21  $2  $3
001110_00 000_00010 11110000  11110000   //xori $2   $0   
001110_00 000_00011 00001111  00001111   //xori $3   $0  
000000_00 010_00011 10110_000 00_100110  //xor  $22  $2  $3
000000_00 000_00001 11110_000 00_100000  //add  $30  $0   $1
000011_00 000_00000 00000000  00001000   //jal   8 
000000_00 000_10100 11110_000 00_100000  //add  $30  $0   $20
000011_00 000_00000 00000000  00001000   //jal   8 
000000_00 000_10101 11110_000 00_100000  //add  $30  $0   $21
000011_00 000_00000 00000000  00001000   //jal   8 
000000_00 000_10110 11110_000 00_100000  //add  $30  $0   $22
000011_00 000_00000 00000000  00001000   //jal   8 
000000_00 000_00000 00001_000 00_100111  //nori
000000_00 000_00001 00010_000 01_000000  //sll  $2   $1   2
000000_00 000_00001 00011_000 01_000010  //srl  $3   $1   2
000000_00 000_00001 00100_000 01_000011  //sra  $4   $1   2
000000_00 000_00001 11110_000 00_100000  //add  $30  $0   $1
000011_00 000_00000 00000000  00001000   //jal   8 
000000_00 000_00010 11110_000 00_100000  //add  $30  $0   $2
000011_00 000_00000 00000000  00001000   //jal   8 
000000_00 000_00011 11110_000 00_100000  //add  $30  $0   $3
000011_00 000_00000 00000000  00001000   //jal   8 
000000_00 000_00100 11110_000 00_100000  //add  $30  $0   $4
000011_00 000_00000 00000000  00001000   //jal   8 
001000_00 000_00001 00000000  00000001   //addi $1   $0   1    add     r3, r2, r1  
000000_00 000_00001 00010_000 00_100010  //sub  $2  $0  $1     add     r4, r2, r3  
000000_00 010_00001 00011_000 00_100000  //add  $3  $2   $1   add     r4, r4, r4  
000000_00 010_00011 00100_000 00_100000  //add  $4  $2   $3   add     r4, r4, r4  
000000_00 100_00100 00100_000 00_100000  //add  $4  $4   $4   add     r30,r0, r1  
000000_00 100_00100 00100_000 00_100000  //add  $4  $4   $4
000000_00 000_00001 11110_000 00_100000  //add  $30  $0   $1
000011_00 000_00000 00000000  00001000   //jal   8
000000_00 000_00010 11110_000 00_100000  //add  $30  $0   $2
000011_00 000_00000 00000000  00001000   //jal   8
000000_00 000_00011 11110_000 00_100000  //add  $30  $0   $3
000011_00 000_00000 00000000  00001000   //jal   8
000000_00 000_00100 11110_000 00_100000  //add  $30  $0   $4
000011_00 000_00000 00000000  00001000   //jal   8
000000_11 101_00000 00000000  00001000   //jr    $29
000010_00 000_00000 00000000  00111110   //j    3E
000000_00 000_00000 00000000  00000000   //nop
//
//Instruction Address, Label			Instruction					Comment           
//---------------------------------------------------------------------------------------------------
//	0x00							nop
//	0x01	Main:                   addi    r30,r0, 0x0932  
//	0x02	                        jal     OutputTestPort      // Indicate that simulation begin
//	0x03	                        jal     InitSystem
//	0x04	                        jal     TestInstruction
//	0x05	                        addi    r30,r0, 0x0D5D  
//	0x06	                        jal     OutputTestPort      // Indicate that simulation end
//	0x07	                        j		Trap
//	0x08	OutputTestPort:         sw      r30, r0, 0x0100     // put output value in r30
//	0x09	                        jr      r31                 // jump back to caller
//	0x0A	InitSystem:             add     r1, r0, r0
//	0x0B	InitDataMem:            slti    r2, r1, 0x0040
//	0x0C	                        beq     r2, r0, InitExit    // r2= 0x0000 wheb r1==0x0040
//	0x0D	                        sw      r0, r1, 0x0000
//	0x0E	                        addi    r1, r1, 0x0004
//	0x0F	                        j       InitDataMem
//	0x10	InitExit:               jr      r31
//	0x11	TestInstruction:        add     r29,r31,r0          //return address
//	0x12	                        nori    r1, r0, r0          //FFFF-FFFF
//	0x13	                        andi    r2, r1, 0xFFFF      //0000-FFFF
//	0x14	                        and     r20,r1, r2          //0000-FFFF is ok, others are not
//	0x15	                        ori     r2, r0, 0xFF00      //0000-FF00
//	0x16	                        ori     r3, r0, 0x00FF      //0000-00FF
//	0x17	                        or      r21,r2, r3          //0000-FFFF is ok, others are not
//	0x18	                        xori    r2, r0, 0xF0F0      //0000-F0F0
//	0x19	                        xori    r3, r0, 0x0F0F      //0000-0F0F
//	0x1A	                        xor     r22,r2, r3          //0000-FFFF is ok, others are not
//	0x1B	                        add     r30,r0, r1
//	0x1C	                        jal     OutputTestPort
//	0x1D	                        add     r30,r0, r20
//	0x1E	                        jal     OutputTestPort
//	0x1F	                        add     r30,r0, r21
//	0x20	                        jal     OutputTestPort
//	0x21	                        add     r30,r0, r22
//	0x22	                        jal     OutputTestPort
//	0x23	TestShiftInstruction:   nori    r1, r0, r0          //FFFF-FFFF
//	0x24	                        sll     r2, r1, 0x0040      //FFFF-FFFE
//	0x25	                        srl     r3, r1, 0x0040      //7FFF-FFFF
//	0x26	                        sra     r4, r1, 0x0040      //FFFF-FFFF
//	0x27	                        add     r30,r0, r1
//	0x28	                        jal     OutputTestPort
//	0x29	                        add     r30,r0, r2
//	0x2A	                        jal     OutputTestPort
//	0x2B	                        add     r30,r0, r3
//	0x2C	                        jal     OutputTestPort
//	0x2D	                        add     r30,r0, r4
//	0x2E	                        jal     OutputTestPort
//	0x2F	TestForwarding:         addi    r1, r0, 0x0001      // r1==1
//	0x30	                        sub     r2, r0, r1,         // r2==-1
//	0x31	                        add     r3, r2, r1          // r3== 0
//	0x32	                        add     r4, r2, r3          // r4==-1
//	0x33	                        add     r4, r4, r4          // r4==-2
//	0x34	                        add     r4, r4, r4          // r4==-4
//	0x35	                        add     r30,r0, r1          
//	0x36	                        jal     OutputTestPort
//	0x37	                        add     r30,r0, r2          
//	0x38	                        jal     OutputTestPort
//	0x39	                        add     r30,r0, r3          
//	0x3A	                        jal     OutputTestPort
//	0x3B	                        add     r30,r0, r4          
//	0x3C	                        jal     OutputTestPort
//	0x3D	                        jr      r29
//	0x3E	Trap:					j		Trap
//	0x3F							nop	